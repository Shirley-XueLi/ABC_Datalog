
---------Start detInsInc, Input theory is:------

[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[c2]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]]
[+[animal,vble(y)],-[mammal,vble(y)]]
[+[animal,[c2]]]
[+[getMonkeyPox,[c1]]]
[+[getMonkeyPox,[c3]]]
[+[mammal,vble(x)],-[human,vble(x)]]
[+[occurMonkeyPox,[c1]]]
[+[occurMonkeyPox,[c2]]]
[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]]
[+[tired,[c3]]]


---------Equivalent classes are:------

---------InComps are------
[-[animal,[c2]]],[[([-[animal,[c2]]],[+[animal,[c2]]],[],[],[0,0])]]

---------Violations are------

--------- Start repInsInc round: 1

--------Start unblocking 1 based on evidences  ------

-- Unresolvables and ProofCur is :
[-[getMonkeyPox,[human]]]
[([-[getMonkeyPox,[human]]],[],[],[-[getMonkeyPox,[human]]],[0,0])]

--Deleting unprovable preconditions:
[-[getMonkeyPox,[human]]]

--Reformation: Unresolvables:
[-[getMonkeyPox,[human]]]

Reformation: targeted evidence
[getMonkeyPox,[human]]
--------Reformation Candidates------
[([+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c1]]],[([human],[c1])],1,[[([human],[c1])]],[([+[getMonkeyPox,[c1]]],[],[],[+[getMonkeyPox,[c1]]],[0,0])])]
---------------Axiom is 1  [+[getMonkeyPox,[c1]]]
---------------Mismatches is 1  [([human],[c1])]
--renameArgs: Mismatches:
[([human],[c1])]
[[arity(animal)],[arity(animal)],[arity(getMonkeyPox)],[animal],[animal],[getMonkeyPox]]

--renameArgs: RepPlanS:
rename([([c1],[human],[+[getMonkeyPox,[c1]]])])

--renameArgs: TargCls:
[[+[getMonkeyPox,[c1]]]]

--Unblocking 1: RepPlanS:
[rename([([c1],[human],[+[getMonkeyPox,[c1]]])])]
[+[getMonkeyPox,[c1]]]


--extC2V: RepPlanS:
extC2V([([c1],vble(z),[+[getMonkeyPox,[c1]]])])

--extC2V: TargCls:
[[+[getMonkeyPox,[c1]]]]

--Unblocking 1: RepPlanS:
[extC2V([([c1],vble(z),[+[getMonkeyPox,[c1]]])])]
[+[getMonkeyPox,[c1]]]


--------Reformation Candidates------
[([+[getMonkeyPox,[c3]]],[+[getMonkeyPox,[c3]]],[([human],[c3])],1,[[([human],[c3])]],[([+[getMonkeyPox,[c3]]],[],[],[+[getMonkeyPox,[c3]]],[0,0])])]
---------------Axiom is 1  [+[getMonkeyPox,[c3]]]
---------------Mismatches is 1  [([human],[c3])]
--renameArgs: Mismatches:
[([human],[c3])]
[[arity(animal)],[arity(animal)],[arity(getMonkeyPox)],[animal],[animal],[getMonkeyPox]]

--renameArgs: RepPlanS:
rename([([c3],[human],[+[getMonkeyPox,[c3]]])])

--renameArgs: TargCls:
[[+[getMonkeyPox,[c3]]]]

--Unblocking 1: RepPlanS:
[rename([([c3],[human],[+[getMonkeyPox,[c3]]])])]
[+[getMonkeyPox,[c3]]]


--extC2V: RepPlanS:
extC2V([([c3],vble(z),[+[getMonkeyPox,[c3]]])])

--extC2V: TargCls:
[[+[getMonkeyPox,[c3]]]]

--Unblocking 1: RepPlanS:
[extC2V([([c3],vble(z),[+[getMonkeyPox,[c3]]])])]
[+[getMonkeyPox,[c3]]]


--------Reformation Candidates------
[([+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c1]]],[([human],[c1])],1,[[([human],[c1])]],[([+[getMonkeyPox,[c1]]],[],[],[+[getMonkeyPox,[c1]]],[0,0])])]
---------------Axiom is 1  [+[getMonkeyPox,[c1]]]
---------------Mismatches is 1  [([human],[c1])]
--renameArgs: Mismatches:
[([human],[c1])]
[[arity(animal)],[arity(animal)],[arity(getMonkeyPox)],[animal],[animal],[getMonkeyPox]]

--renameArgs: RepPlanS:
rename([([c1],[human],[+[getMonkeyPox,[c1]]])])

--renameArgs: TargCls:
[[+[getMonkeyPox,[c1]]]]

--Unblocking 1: RepPlanS:
[rename([([c1],[human],[+[getMonkeyPox,[c1]]])])]
[+[getMonkeyPox,[c1]]]


--extC2V: RepPlanS:
extC2V([([c1],vble(z),[+[getMonkeyPox,[c1]]])])

--extC2V: TargCls:
[[+[getMonkeyPox,[c1]]]]

--Unblocking 1: RepPlanS:
[extC2V([([c1],vble(z),[+[getMonkeyPox,[c1]]])])]
[+[getMonkeyPox,[c1]]]


--------Reformation Candidates------
[([+[getMonkeyPox,[c3]]],[+[getMonkeyPox,[c3]]],[([human],[c3])],1,[[([human],[c3])]],[([+[getMonkeyPox,[c3]]],[],[],[+[getMonkeyPox,[c3]]],[0,0])])]
---------------Axiom is 1  [+[getMonkeyPox,[c3]]]
---------------Mismatches is 1  [([human],[c3])]
--renameArgs: Mismatches:
[([human],[c3])]
[[arity(animal)],[arity(animal)],[arity(getMonkeyPox)],[animal],[animal],[getMonkeyPox]]

--renameArgs: RepPlanS:
rename([([c3],[human],[+[getMonkeyPox,[c3]]])])

--renameArgs: TargCls:
[[+[getMonkeyPox,[c3]]]]

--Unblocking 1: RepPlanS:
[rename([([c3],[human],[+[getMonkeyPox,[c3]]])])]
[+[getMonkeyPox,[c3]]]


--extC2V: RepPlanS:
extC2V([([c3],vble(z),[+[getMonkeyPox,[c3]]])])

--extC2V: TargCls:
[[+[getMonkeyPox,[c3]]]]

--Unblocking 1: RepPlanS:
[extC2V([([c3],vble(z),[+[getMonkeyPox,[c3]]])])]
[+[getMonkeyPox,[c3]]]


--Unblocking 1: RepPlanS:
[expand([+[getMonkeyPox,[human]]])]
[+[getMonkeyPox,[human]]]


--------Start unblocking 2 by adding a rule ------

--------Start unblocking 2 by adding a rule ------

--------Start unblocking 3: by Analogical Abduction for ------
[-[getMonkeyPox,[human]]]

******** No rules are useful, Analogy fails.

-- The single unresolvable subgoal. is :
[[-[getMonkeyPox,[human]]]]

5repair plans  for buildP:[[-[getMonkeyPox,[human]]],[[([-[getMonkeyPox,[human]]],[],[],[-[getMonkeyPox,[human]]],[0,0])]]]


[insuff,([expand([+[getMonkeyPox,[human]]])],[[+[getMonkeyPox,[human]]]]),[[+[getMonkeyPox,[human]]]]]
[insuff,([extC2V([([c1],vble(z),[+[getMonkeyPox,[c1]]])])],[[+[getMonkeyPox,[c1]]]]),[[+[getMonkeyPox,[c1]]]]]
[insuff,([extC2V([([c3],vble(z),[+[getMonkeyPox,[c3]]])])],[[+[getMonkeyPox,[c3]]]]),[[+[getMonkeyPox,[c3]]]]]
[insuff,([rename([([c1],[human],[+[getMonkeyPox,[c1]]])])],[[+[getMonkeyPox,[c1]]]]),[[+[getMonkeyPox,[c1]]]]]
[insuff,([rename([([c3],[human],[+[getMonkeyPox,[c3]]])])],[[+[getMonkeyPox,[c3]]]]),[[+[getMonkeyPox,[c3]]]]]


--------Start unblocking 1 based on evidences  ------

-- Unresolvables and ProofCur is :
[-[animal,[monkey]]]
[([-[animal,[monkey]]],[+[animal,vble(y)],-[mammal,vble(y)]],[[monkey]/vble(y)],[-[mammal,[monkey]]],[0,0]),([-[mammal,[monkey]]],[+[mammal,vble(x)],-[human,vble(x)]],[[monkey]/vble(x)],[-[human,[monkey]]],[1,0])]

--Deleting unprovable preconditions:
[-[animal,[monkey]]]

--Reformation: Unresolvables:
[-[animal,[monkey]]]

Reformation: targeted evidence
[animal,[monkey]]
--------Reformation Candidates------
[([+[animal,[c2]]],[+[animal,[c2]]],[([monkey],[c2])],1,[[([monkey],[c2])]],[([+[animal,[c2]]],[],[],[+[animal,[c2]]],[0,0])])]
---------------Axiom is 1  [+[animal,[c2]]]
---------------Mismatches is 1  [([monkey],[c2])]
--renameArgs: Mismatches:
[([monkey],[c2])]
[[arity(animal)],[arity(animal)],[arity(getMonkeyPox)],[animal],[animal],[getMonkeyPox]]

--renameArgs: RepPlanS:
rename([([c2],[monkey],[+[animal,[c2]]])])

--renameArgs: TargCls:
[[+[animal,[c2]]]]

--Unblocking 1: RepPlanS:
[rename([([c2],[monkey],[+[animal,[c2]]])])]
[+[animal,[c2]]]


--extC2V: RepPlanS:
extC2V([([c2],vble(z),[+[animal,[c2]]])])

--extC2V: TargCls:
[[+[animal,[c2]]]]

--Unblocking 1: RepPlanS:
[extC2V([([c2],vble(z),[+[animal,[c2]]])])]
[+[animal,[c2]]]


--------Reformation Candidates------
[([+[animal,[c2]]],[+[animal,[c2]]],[([monkey],[c2])],1,[[([monkey],[c2])]],[([+[animal,[c2]]],[],[],[+[animal,[c2]]],[0,0])])]
---------------Axiom is 1  [+[animal,[c2]]]
---------------Mismatches is 1  [([monkey],[c2])]
--renameArgs: Mismatches:
[([monkey],[c2])]
[[arity(animal)],[arity(animal)],[arity(getMonkeyPox)],[animal],[animal],[getMonkeyPox]]

--renameArgs: RepPlanS:
rename([([c2],[monkey],[+[animal,[c2]]])])

--renameArgs: TargCls:
[[+[animal,[c2]]]]

--Unblocking 1: RepPlanS:
[rename([([c2],[monkey],[+[animal,[c2]]])])]
[+[animal,[c2]]]


--extC2V: RepPlanS:
extC2V([([c2],vble(z),[+[animal,[c2]]])])

--extC2V: TargCls:
[[+[animal,[c2]]]]

--Unblocking 1: RepPlanS:
[extC2V([([c2],vble(z),[+[animal,[c2]]])])]
[+[animal,[c2]]]


--Unblocking 1: RepPlanS:
[expand([+[animal,[monkey]]])]
[+[animal,[monkey]]]


-- Unresolvables and ProofCur is :
[-[human,[monkey]]]
[([-[animal,[monkey]]],[+[animal,vble(y)],-[mammal,vble(y)]],[[monkey]/vble(y)],[-[mammal,[monkey]]],[0,0]),([-[mammal,[monkey]]],[+[mammal,vble(x)],-[human,vble(x)]],[[monkey]/vble(x)],[-[human,[monkey]]],[1,0])]

--Deleting unprovable preconditions:
[-[human,[monkey]]]

--Reformation: Unresolvables:
[-[human,[monkey]]]

Reformation: targeted evidence
[human,[monkey]]
--Unblocking 1: RepPlanS:
[expand([+[human,[monkey]]])]
[+[human,[monkey]]]


-- Unresolvables and ProofCur is :
[-[mammal,[monkey]]]
[([-[animal,[monkey]]],[+[animal,vble(y)],-[mammal,vble(y)]],[[monkey]/vble(y)],[-[mammal,[monkey]]],[0,0]),([-[mammal,[monkey]]],[+[mammal,vble(x)],-[human,vble(x)]],[[monkey]/vble(x)],[-[human,[monkey]]],[1,0])]

--Deleting unprovable preconditions:
[-[mammal,[monkey]]]

--Reformation: Unresolvables:
[-[mammal,[monkey]]]

Reformation: targeted evidence
[mammal,[monkey]]
--Unblocking 1: RepPlanS:
[expand([+[mammal,[monkey]]])]
[+[mammal,[monkey]]]


--------Start unblocking 2 by adding a rule ------

--------Start unblocking 2 by adding a rule ------

--------Start unblocking 3: by Analogical Abduction for ------
[-[animal,[monkey]]]

******** No rules are useful, Analogy fails.

-- The single unresolvable subgoal. is :
[[-[animal,[monkey]]],[-[human,[monkey]]],[-[mammal,[monkey]]]]

5repair plans  for buildP:[[-[animal,[monkey]]],[[([-[animal,[monkey]]],[+[animal,vble(y)],-[mammal,vble(y)]],[[monkey]/vble(y)],[-[mammal,[monkey]]],[0,0]),([-[mammal,[monkey]]],[+[mammal,vble(x)],-[human,vble(x)]],[[monkey]/vble(x)],[-[human,[monkey]]],[1,0])]]]


[insuff,([expand([+[animal,[monkey]]])],[[+[animal,[monkey]]]]),[[+[animal,[monkey]]],[+[animal,vble(y)],-[mammal,vble(y)]],[+[mammal,vble(x)],-[human,vble(x)]]]]
[insuff,([expand([+[human,[monkey]]])],[[+[human,[monkey]]]]),[[+[human,[monkey]]],[+[animal,vble(y)],-[mammal,vble(y)]],[+[mammal,vble(x)],-[human,vble(x)]]]]
[insuff,([expand([+[mammal,[monkey]]])],[[+[mammal,[monkey]]]]),[[+[mammal,[monkey]]],[+[animal,vble(y)],-[mammal,vble(y)]],[+[mammal,vble(x)],-[human,vble(x)]]]]
[insuff,([extC2V([([c2],vble(z),[+[animal,[c2]]])])],[[+[animal,[c2]]]]),[[+[animal,[c2]]],[+[animal,vble(y)],-[mammal,vble(y)]],[+[mammal,vble(x)],-[human,vble(x)]]]]
[insuff,([rename([([c2],[monkey],[+[animal,[c2]]])])],[[+[animal,[c2]]]]),[[+[animal,[c2]]],[+[animal,vble(y)],-[mammal,vble(y)]],[+[mammal,vble(x)],-[human,vble(x)]]]]


-------- Start blockProof1: -------- 
[-[animal,[c2]]],[+[animal,[c2]]],[],[],[0,0]

TheoryIn is: [[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[c2]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]]

[+[animal,vble(y)],-[mammal,vble(y)]]
[+[animal,[c2]]]
[+[getMonkeyPox,[c1]]]
[+[getMonkeyPox,[c3]]]
[+[mammal,vble(x)],-[human,vble(x)]]
[+[occurMonkeyPox,[c1]]]
[+[occurMonkeyPox,[c2]]]
[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]]
[+[tired,[c3]]]

Original Axiom is: [+[animal,[c2]]]

-------- start asser2rule to find unprovable precondition

-- SuffGoals=[]

-- Theory=[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[c2]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]]


[+[animal,vble(y)],-[mammal,vble(y)]]
[+[animal,[c2]]]
[+[getMonkeyPox,[c1]]]
[+[getMonkeyPox,[c3]]]
[+[mammal,vble(x)],-[human,vble(x)]]
[+[occurMonkeyPox,[c1]]]
[+[occurMonkeyPox,[c2]]]
[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]]
[+[tired,[c3]]]

-- The theorems of Predicate -animal-- are:
[]
-------- Start blockProof2: reformation -------- 
-------- Proof is:
[([-[animal,[c2]]],[+[animal,[c2]]],[],[],[0,0])]


-------- SuffGoals is:
[]


1 repair plans for blockP:[([-[animal,[c2]]],[+[animal,[c2]]],[],[],[0,0])]


[incomp,([delete([+[animal,[c2]]])],[[+[animal,[c2]]]]),[[+[animal,[c2]]]]]


3 fault's new repair plans found: [[[insuff,([expand([+[getMonkeyPox,[human]]])],[[+[getMonkeyPox,[human]]]]),[[+[getMonkeyPox,[human]]]]],[insuff,([extC2V([([c1],vble(z),[+[getMonkeyPox,[c1]]])])],[[+[getMonkeyPox,[c1]]]]),[[+[getMonkeyPox,[c1]]]]],[insuff,([extC2V([([c3],vble(z),[+[getMonkeyPox,[c3]]])])],[[+[getMonkeyPox,[c3]]]]),[[+[getMonkeyPox,[c3]]]]],[insuff,([rename([([c1],[human],[+[getMonkeyPox,[c1]]])])],[[+[getMonkeyPox,[c1]]]]),[[+[getMonkeyPox,[c1]]]]],[insuff,([rename([([c3],[human],[+[getMonkeyPox,[c3]]])])],[[+[getMonkeyPox,[c3]]]]),[[+[getMonkeyPox,[c3]]]]]],[[insuff,([expand([+[animal,[monkey]]])],[[+[animal,[monkey]]]]),[[+[animal,[monkey]]],[+[animal,vble(y)],-[mammal,vble(y)]],[+[mammal,vble(x)],-[human,vble(x)]]]],[insuff,([expand([+[human,[monkey]]])],[[+[human,[monkey]]]]),[[+[human,[monkey]]],[+[animal,vble(y)],-[mammal,vble(y)]],[+[mammal,vble(x)],-[human,vble(x)]]]],[insuff,([expand([+[mammal,[monkey]]])],[[+[mammal,[monkey]]]]),[[+[mammal,[monkey]]],[+[animal,vble(y)],-[mammal,vble(y)]],[+[mammal,vble(x)],-[human,vble(x)]]]],[insuff,([extC2V([([c2],vble(z),[+[animal,[c2]]])])],[[+[animal,[c2]]]]),[[+[animal,[c2]]],[+[animal,vble(y)],-[mammal,vble(y)]],[+[mammal,vble(x)],-[human,vble(x)]]]],[insuff,([rename([([c2],[monkey],[+[animal,[c2]]])])],[[+[animal,[c2]]]]),[[+[animal,[c2]]],[+[animal,vble(y)],-[mammal,vble(y)]],[+[mammal,vble(x)],-[human,vble(x)]]]]],[[incomp,([delete([+[animal,[c2]]])],[[+[animal,[c2]]]]),[[+[animal,[c2]]]]]]]


[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[c2]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]]

-------- Start to apply repair plans:
delete([+[animal,[c2]]])


******** RepPlan: delete([+[animal,[c2]]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
expand([+[animal,[monkey]]])


******** RepPlan: expand([+[animal,[monkey]]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
expand([+[getMonkeyPox,[human]]])


******** RepPlan: expand([+[getMonkeyPox,[human]]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
expand([+[human,[monkey]]])


******** RepPlan: expand([+[human,[monkey]]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
expand([+[mammal,[monkey]]])


******** RepPlan: expand([+[mammal,[monkey]]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
extC2V([([c1],vble(z),[+[getMonkeyPox,[c1]]])])


******** RepPlan: extC2V([([c1],vble(z),[+[getMonkeyPox,[c1]]])])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
extC2V([([c2],vble(z),[+[animal,[c2]]])])


******** RepPlan: extC2V([([c2],vble(z),[+[animal,[c2]]])])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
extC2V([([c3],vble(z),[+[getMonkeyPox,[c3]]])])


******** RepPlan: extC2V([([c3],vble(z),[+[getMonkeyPox,[c3]]])])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
rename([([c1],[human],[+[getMonkeyPox,[c1]]])])


******** RepPlan: rename([([c1],[human],[+[getMonkeyPox,[c1]]])])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
rename([([c2],[monkey],[+[animal,[c2]]])])


******** RepPlan: rename([([c2],[monkey],[+[animal,[c2]]])])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
rename([([c3],[human],[+[getMonkeyPox,[c3]]])])


******** RepPlan: rename([([c3],[human],[+[getMonkeyPox,[c3]]])])

-------- Finish applying repair plans.

-- There are 11 repaired states: 
[[[delete([+[animal,[c2]]])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]]
[[[expand([+[animal,[monkey]]])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[c2]]],[+[animal,[monkey]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]]
[[[expand([+[getMonkeyPox,[human]]])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[c2]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[getMonkeyPox,[human]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]]
[[[expand([+[human,[monkey]]])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[c2]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[human,[monkey]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]]
[[[expand([+[mammal,[monkey]]])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[c2]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[mammal,[monkey]]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]]
[[[extC2V([([c1],vble(z),[+[getMonkeyPox,[c1]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[c2]]],[+[getMonkeyPox,vble(z)]],[+[getMonkeyPox,[c3]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]]
[[[extC2V([([c2],vble(z),[+[animal,[c2]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,vble(z)]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]]
[[[extC2V([([c3],vble(z),[+[getMonkeyPox,[c3]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[c2]]],[+[getMonkeyPox,vble(z)]],[+[getMonkeyPox,[c1]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]]
[[[rename([([c1],[human],[+[getMonkeyPox,[c1]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[c2]]],[+[getMonkeyPox,[c3]]],[+[getMonkeyPox,[human]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]]
[[[rename([([c2],[monkey],[+[animal,[c2]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]]
[[[rename([([c3],[human],[+[getMonkeyPox,[c3]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[c2]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[human]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]]


-- RepStatesFine [[[[rename([([c3],[human],[+[getMonkeyPox,[c3]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[c2]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[human]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]],[[[rename([([c2],[monkey],[+[animal,[c2]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]],[[[rename([([c1],[human],[+[getMonkeyPox,[c1]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[c2]]],[+[getMonkeyPox,[c3]]],[+[getMonkeyPox,[human]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]],[[[extC2V([([c3],vble(z),[+[getMonkeyPox,[c3]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[c2]]],[+[getMonkeyPox,vble(z)]],[+[getMonkeyPox,[c1]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]],[[[extC2V([([c2],vble(z),[+[animal,[c2]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,vble(z)]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]],[[[extC2V([([c1],vble(z),[+[getMonkeyPox,[c1]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[c2]]],[+[getMonkeyPox,vble(z)]],[+[getMonkeyPox,[c3]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]],[[[expand([+[mammal,[monkey]]])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[c2]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[mammal,[monkey]]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]],[[[expand([+[human,[monkey]]])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[c2]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[human,[monkey]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]],[[[expand([+[getMonkeyPox,[human]]])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[c2]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[getMonkeyPox,[human]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]],[[[expand([+[animal,[monkey]]])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[c2]]],[+[animal,[monkey]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]],[[[delete([+[animal,[c2]]])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]]]

---------Start detInsInc, Input theory is:------

[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[c2]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[human]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]]
[+[animal,vble(y)],-[mammal,vble(y)]]
[+[animal,[c2]]]
[+[getMonkeyPox,[c1]]]
[+[getMonkeyPox,[human]]]
[+[mammal,vble(x)],-[human,vble(x)]]
[+[occurMonkeyPox,[c1]]]
[+[occurMonkeyPox,[c2]]]
[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]]
[+[tired,[c3]]]


---------Equivalent classes are:------

---------InComps are------
[-[animal,[c2]]],[[([-[animal,[c2]]],[+[animal,[c2]]],[],[],[0,0])]]

---------Violations are------

---------Start detInsInc, Input theory is:------

[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]]
[+[animal,vble(y)],-[mammal,vble(y)]]
[+[animal,[monkey]]]
[+[getMonkeyPox,[c1]]]
[+[getMonkeyPox,[c3]]]
[+[mammal,vble(x)],-[human,vble(x)]]
[+[occurMonkeyPox,[c1]]]
[+[occurMonkeyPox,[c2]]]
[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]]
[+[tired,[c3]]]


---------Equivalent classes are:------

---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[c2]]],[+[getMonkeyPox,[c3]]],[+[getMonkeyPox,[human]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]]
[+[animal,vble(y)],-[mammal,vble(y)]]
[+[animal,[c2]]]
[+[getMonkeyPox,[c3]]]
[+[getMonkeyPox,[human]]]
[+[mammal,vble(x)],-[human,vble(x)]]
[+[occurMonkeyPox,[c1]]]
[+[occurMonkeyPox,[c2]]]
[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]]
[+[tired,[c3]]]


---------Equivalent classes are:------

---------InComps are------
[-[animal,[c2]]],[[([-[animal,[c2]]],[+[animal,[c2]]],[],[],[0,0])]]

---------Violations are------

---------Start detInsInc, Input theory is:------

[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[c2]]],[+[getMonkeyPox,vble(z)]],[+[getMonkeyPox,[c1]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]]
[+[animal,vble(y)],-[mammal,vble(y)]]
[+[animal,[c2]]]
[+[getMonkeyPox,vble(z)]]
[+[getMonkeyPox,[c1]]]
[+[mammal,vble(x)],-[human,vble(x)]]
[+[occurMonkeyPox,[c1]]]
[+[occurMonkeyPox,[c2]]]
[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]]
[+[tired,[c3]]]


---------Equivalent classes are:------

---------InComps are------
[-[animal,[c2]]],[[([-[animal,[c2]]],[+[animal,[c2]]],[],[],[0,0])]]

---------Violations are------

---------Start detInsInc, Input theory is:------

[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,vble(z)]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]]
[+[animal,vble(y)],-[mammal,vble(y)]]
[+[animal,vble(z)]]
[+[getMonkeyPox,[c1]]]
[+[getMonkeyPox,[c3]]]
[+[mammal,vble(x)],-[human,vble(x)]]
[+[occurMonkeyPox,[c1]]]
[+[occurMonkeyPox,[c2]]]
[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]]
[+[tired,[c3]]]


---------Equivalent classes are:------

---------InComps are------
[-[animal,[c2]]],[[([-[animal,[c2]]],[+[animal,vble(z)]],[],[],[0,0])]]

---------Violations are------

---------Start detInsInc, Input theory is:------

[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[c2]]],[+[getMonkeyPox,vble(z)]],[+[getMonkeyPox,[c3]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]]
[+[animal,vble(y)],-[mammal,vble(y)]]
[+[animal,[c2]]]
[+[getMonkeyPox,vble(z)]]
[+[getMonkeyPox,[c3]]]
[+[mammal,vble(x)],-[human,vble(x)]]
[+[occurMonkeyPox,[c1]]]
[+[occurMonkeyPox,[c2]]]
[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]]
[+[tired,[c3]]]


---------Equivalent classes are:------

---------InComps are------
[-[animal,[c2]]],[[([-[animal,[c2]]],[+[animal,[c2]]],[],[],[0,0])]]

---------Violations are------

---------Start detInsInc, Input theory is:------

[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[c2]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[mammal,[monkey]]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]]
[+[animal,vble(y)],-[mammal,vble(y)]]
[+[animal,[c2]]]
[+[getMonkeyPox,[c1]]]
[+[getMonkeyPox,[c3]]]
[+[mammal,vble(x)],-[human,vble(x)]]
[+[mammal,[monkey]]]
[+[occurMonkeyPox,[c1]]]
[+[occurMonkeyPox,[c2]]]
[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]]
[+[tired,[c3]]]


---------Equivalent classes are:------

---------InComps are------
[-[animal,[c2]]],[[([-[animal,[c2]]],[+[animal,[c2]]],[],[],[0,0])]]

---------Violations are------

---------Start detInsInc, Input theory is:------

[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[c2]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[human,[monkey]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]]
[+[animal,vble(y)],-[mammal,vble(y)]]
[+[animal,[c2]]]
[+[getMonkeyPox,[c1]]]
[+[getMonkeyPox,[c3]]]
[+[human,[monkey]]]
[+[mammal,vble(x)],-[human,vble(x)]]
[+[occurMonkeyPox,[c1]]]
[+[occurMonkeyPox,[c2]]]
[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]]
[+[tired,[c3]]]


---------Equivalent classes are:------

---------InComps are------
[-[animal,[c2]]],[[([-[animal,[c2]]],[+[animal,[c2]]],[],[],[0,0])]]

---------Violations are------

---------Start detInsInc, Input theory is:------

[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[c2]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[getMonkeyPox,[human]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]]
[+[animal,vble(y)],-[mammal,vble(y)]]
[+[animal,[c2]]]
[+[getMonkeyPox,[c1]]]
[+[getMonkeyPox,[c3]]]
[+[getMonkeyPox,[human]]]
[+[mammal,vble(x)],-[human,vble(x)]]
[+[occurMonkeyPox,[c1]]]
[+[occurMonkeyPox,[c2]]]
[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]]
[+[tired,[c3]]]


---------Equivalent classes are:------

---------InComps are------
[-[animal,[c2]]],[[([-[animal,[c2]]],[+[animal,[c2]]],[],[],[0,0])]]

---------Violations are------

---------Start detInsInc, Input theory is:------

[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[c2]]],[+[animal,[monkey]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]]
[+[animal,vble(y)],-[mammal,vble(y)]]
[+[animal,[c2]]]
[+[animal,[monkey]]]
[+[getMonkeyPox,[c1]]]
[+[getMonkeyPox,[c3]]]
[+[mammal,vble(x)],-[human,vble(x)]]
[+[occurMonkeyPox,[c1]]]
[+[occurMonkeyPox,[c2]]]
[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]]
[+[tired,[c3]]]


---------Equivalent classes are:------

---------InComps are------
[-[animal,[c2]]],[[([-[animal,[c2]]],[+[animal,[c2]]],[],[],[0,0])]]

---------Violations are------

---------Start detInsInc, Input theory is:------

[[+[animal,vble(y)],-[mammal,vble(y)]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]]
[+[animal,vble(y)],-[mammal,vble(y)]]
[+[getMonkeyPox,[c1]]]
[+[getMonkeyPox,[c3]]]
[+[mammal,vble(x)],-[human,vble(x)]]
[+[occurMonkeyPox,[c1]]]
[+[occurMonkeyPox,[c2]]]
[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]]
[+[tired,[c3]]]


---------Equivalent classes are:------

---------InComps are------

---------Violations are------

-- All faulty states: 11
1,1,[[[rename([([c3],[human],[+[getMonkeyPox,[c3]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[c2]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[human]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]],[([-[getMonkeyPox,[human]]],[[([-[getMonkeyPox,[human]]],[+[getMonkeyPox,[human]]],[],[],[0,0])]])],[([-[animal,[monkey]]],[[([-[animal,[monkey]]],[+[animal,vble(y)],-[mammal,vble(y)]],[[monkey]/vble(y)],[-[mammal,[monkey]]],[0,0]),([-[mammal,[monkey]]],[+[mammal,vble(x)],-[human,vble(x)]],[[monkey]/vble(x)],[-[human,[monkey]]],[1,0])]])],[([-[animal,[c2]]],[[([-[animal,[c2]]],[+[animal,[c2]]],[],[],[0,0])]])]
1,0,[[[rename([([c2],[monkey],[+[animal,[c2]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]],[([-[animal,[monkey]]],[[([-[animal,[monkey]]],[+[animal,[monkey]]],[],[],[0,0])]])],[([-[getMonkeyPox,[human]]],[[([-[getMonkeyPox,[human]]],[],[],[-[getMonkeyPox,[human]]],[0,0])]])],[]
1,1,[[[rename([([c1],[human],[+[getMonkeyPox,[c1]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[c2]]],[+[getMonkeyPox,[c3]]],[+[getMonkeyPox,[human]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]],[([-[getMonkeyPox,[human]]],[[([-[getMonkeyPox,[human]]],[+[getMonkeyPox,[human]]],[],[],[0,0])]])],[([-[animal,[monkey]]],[[([-[animal,[monkey]]],[+[animal,vble(y)],-[mammal,vble(y)]],[[monkey]/vble(y)],[-[mammal,[monkey]]],[0,0]),([-[mammal,[monkey]]],[+[mammal,vble(x)],-[human,vble(x)]],[[monkey]/vble(x)],[-[human,[monkey]]],[1,0])]])],[([-[animal,[c2]]],[[([-[animal,[c2]]],[+[animal,[c2]]],[],[],[0,0])]])]
1,1,[[[extC2V([([c3],vble(z),[+[getMonkeyPox,[c3]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[c2]]],[+[getMonkeyPox,vble(z)]],[+[getMonkeyPox,[c1]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]],[([-[getMonkeyPox,[human]]],[[([-[getMonkeyPox,[human]]],[+[getMonkeyPox,vble(z)]],[],[],[0,0])]])],[([-[animal,[monkey]]],[[([-[animal,[monkey]]],[+[animal,vble(y)],-[mammal,vble(y)]],[[monkey]/vble(y)],[-[mammal,[monkey]]],[0,0]),([-[mammal,[monkey]]],[+[mammal,vble(x)],-[human,vble(x)]],[[monkey]/vble(x)],[-[human,[monkey]]],[1,0])]])],[([-[animal,[c2]]],[[([-[animal,[c2]]],[+[animal,[c2]]],[],[],[0,0])]])]
1,1,[[[extC2V([([c2],vble(z),[+[animal,[c2]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,vble(z)]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]],[([-[animal,[monkey]]],[[([-[animal,[monkey]]],[+[animal,vble(z)]],[],[],[0,0])]])],[([-[getMonkeyPox,[human]]],[[([-[getMonkeyPox,[human]]],[],[],[-[getMonkeyPox,[human]]],[0,0])]])],[([-[animal,[c2]]],[[([-[animal,[c2]]],[+[animal,vble(z)]],[],[],[0,0])]])]
1,1,[[[extC2V([([c1],vble(z),[+[getMonkeyPox,[c1]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[c2]]],[+[getMonkeyPox,vble(z)]],[+[getMonkeyPox,[c3]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]],[([-[getMonkeyPox,[human]]],[[([-[getMonkeyPox,[human]]],[+[getMonkeyPox,vble(z)]],[],[],[0,0])]])],[([-[animal,[monkey]]],[[([-[animal,[monkey]]],[+[animal,vble(y)],-[mammal,vble(y)]],[[monkey]/vble(y)],[-[mammal,[monkey]]],[0,0]),([-[mammal,[monkey]]],[+[mammal,vble(x)],-[human,vble(x)]],[[monkey]/vble(x)],[-[human,[monkey]]],[1,0])]])],[([-[animal,[c2]]],[[([-[animal,[c2]]],[+[animal,[c2]]],[],[],[0,0])]])]
1,1,[[[expand([+[mammal,[monkey]]])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[c2]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[mammal,[monkey]]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]],[([-[animal,[monkey]]],[[([-[animal,[monkey]]],[+[animal,vble(y)],-[mammal,vble(y)]],[[monkey]/vble(y)],[-[mammal,[monkey]]],[0,0]),([-[mammal,[monkey]]],[+[mammal,[monkey]]],[],[],[0,0])]])],[([-[getMonkeyPox,[human]]],[[([-[getMonkeyPox,[human]]],[],[],[-[getMonkeyPox,[human]]],[0,0])]])],[([-[animal,[c2]]],[[([-[animal,[c2]]],[+[animal,[c2]]],[],[],[0,0])]])]
1,1,[[[expand([+[human,[monkey]]])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[c2]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[human,[monkey]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]],[([-[animal,[monkey]]],[[([-[animal,[monkey]]],[+[animal,vble(y)],-[mammal,vble(y)]],[[monkey]/vble(y)],[-[mammal,[monkey]]],[0,0]),([-[mammal,[monkey]]],[+[mammal,vble(x)],-[human,vble(x)]],[[monkey]/vble(x)],[-[human,[monkey]]],[0,0]),([-[human,[monkey]]],[+[human,[monkey]]],[],[],[0,0])]])],[([-[getMonkeyPox,[human]]],[[([-[getMonkeyPox,[human]]],[],[],[-[getMonkeyPox,[human]]],[0,0])]])],[([-[animal,[c2]]],[[([-[animal,[c2]]],[+[animal,[c2]]],[],[],[0,0])]])]
1,1,[[[expand([+[getMonkeyPox,[human]]])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[c2]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[getMonkeyPox,[human]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]],[([-[getMonkeyPox,[human]]],[[([-[getMonkeyPox,[human]]],[+[getMonkeyPox,[human]]],[],[],[0,0])]])],[([-[animal,[monkey]]],[[([-[animal,[monkey]]],[+[animal,vble(y)],-[mammal,vble(y)]],[[monkey]/vble(y)],[-[mammal,[monkey]]],[0,0]),([-[mammal,[monkey]]],[+[mammal,vble(x)],-[human,vble(x)]],[[monkey]/vble(x)],[-[human,[monkey]]],[1,0])]])],[([-[animal,[c2]]],[[([-[animal,[c2]]],[+[animal,[c2]]],[],[],[0,0])]])]
1,1,[[[expand([+[animal,[monkey]]])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[c2]]],[+[animal,[monkey]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]],[([-[animal,[monkey]]],[[([-[animal,[monkey]]],[+[animal,[monkey]]],[],[],[0,0])]])],[([-[getMonkeyPox,[human]]],[[([-[getMonkeyPox,[human]]],[],[],[-[getMonkeyPox,[human]]],[0,0])]])],[([-[animal,[c2]]],[[([-[animal,[c2]]],[+[animal,[c2]]],[],[],[0,0])]])]
2,0,[[[delete([+[animal,[c2]]])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]],[],[([-[getMonkeyPox,[human]]],[[([-[getMonkeyPox,[human]]],[],[],[-[getMonkeyPox,[human]]],[0,0])]]),([-[animal,[monkey]]],[[([-[animal,[monkey]]],[+[animal,vble(y)],-[mammal,vble(y)]],[[monkey]/vble(y)],[-[mammal,[monkey]]],[0,0]),([-[mammal,[monkey]]],[+[mammal,vble(x)],-[human,vble(x)]],[[monkey]/vble(x)],[-[human,[monkey]]],[1,0])]])],[]

An Optimal repaired theory with cost:2 and the fault state: [([-[animal,[monkey]]],[[([-[animal,[monkey]]],[+[animal,[monkey]]],[],[],[0,0])]])],[([-[getMonkeyPox,[human]]],[[([-[getMonkeyPox,[human]]],[],[],[-[getMonkeyPox,[human]]],[0,0])]])],[]
[[[rename([([c2],[monkey],[+[animal,[c2]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]]
--The number of Optimals: 1
[[[rename([([c2],[monkey],[+[animal,[c2]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]],[([-[animal,[monkey]]],[[([-[animal,[monkey]]],[+[animal,[monkey]]],[],[],[0,0])]])],[([-[getMonkeyPox,[human]]],[[([-[getMonkeyPox,[human]]],[],[],[-[getMonkeyPox,[human]]],[0,0])]])],[]

--------- Start repInsInc round: 2

--------Start unblocking 1 based on evidences  ------

-- Unresolvables and ProofCur is :
[-[getMonkeyPox,[human]]]
[([-[getMonkeyPox,[human]]],[],[],[-[getMonkeyPox,[human]]],[0,0])]

--Deleting unprovable preconditions:
[-[getMonkeyPox,[human]]]

--Reformation: Unresolvables:
[-[getMonkeyPox,[human]]]

Reformation: targeted evidence
[getMonkeyPox,[human]]
--------Reformation Candidates------
[([+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c1]]],[([human],[c1])],1,[[([human],[c1])]],[([+[getMonkeyPox,[c1]]],[],[],[+[getMonkeyPox,[c1]]],[0,0])])]
---------------Axiom is 1  [+[getMonkeyPox,[c1]]]
---------------Mismatches is 1  [([human],[c1])]
--renameArgs: Mismatches:
[([human],[c1])]
[[arity(animal)],[arity(animal)],[arity(getMonkeyPox)],[animal],[animal],[getMonkeyPox]]

--renameArgs: RepPlanS:
rename([([c1],[human],[+[getMonkeyPox,[c1]]])])

--renameArgs: TargCls:
[[+[getMonkeyPox,[c1]]]]

--Unblocking 1: RepPlanS:
[rename([([c1],[human],[+[getMonkeyPox,[c1]]])])]
[+[getMonkeyPox,[c1]]]


--extC2V: RepPlanS:
extC2V([([c1],vble(z),[+[getMonkeyPox,[c1]]])])

--extC2V: TargCls:
[[+[getMonkeyPox,[c1]]]]

--Unblocking 1: RepPlanS:
[extC2V([([c1],vble(z),[+[getMonkeyPox,[c1]]])])]
[+[getMonkeyPox,[c1]]]


--------Reformation Candidates------
[([+[getMonkeyPox,[c3]]],[+[getMonkeyPox,[c3]]],[([human],[c3])],1,[[([human],[c3])]],[([+[getMonkeyPox,[c3]]],[],[],[+[getMonkeyPox,[c3]]],[0,0])])]
---------------Axiom is 1  [+[getMonkeyPox,[c3]]]
---------------Mismatches is 1  [([human],[c3])]
--renameArgs: Mismatches:
[([human],[c3])]
[[arity(animal)],[arity(animal)],[arity(getMonkeyPox)],[animal],[animal],[getMonkeyPox]]

--renameArgs: RepPlanS:
rename([([c3],[human],[+[getMonkeyPox,[c3]]])])

--renameArgs: TargCls:
[[+[getMonkeyPox,[c3]]]]

--Unblocking 1: RepPlanS:
[rename([([c3],[human],[+[getMonkeyPox,[c3]]])])]
[+[getMonkeyPox,[c3]]]


--extC2V: RepPlanS:
extC2V([([c3],vble(z),[+[getMonkeyPox,[c3]]])])

--extC2V: TargCls:
[[+[getMonkeyPox,[c3]]]]

--Unblocking 1: RepPlanS:
[extC2V([([c3],vble(z),[+[getMonkeyPox,[c3]]])])]
[+[getMonkeyPox,[c3]]]


--------Reformation Candidates------
[([+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c1]]],[([human],[c1])],1,[[([human],[c1])]],[([+[getMonkeyPox,[c1]]],[],[],[+[getMonkeyPox,[c1]]],[0,0])])]
---------------Axiom is 1  [+[getMonkeyPox,[c1]]]
---------------Mismatches is 1  [([human],[c1])]
--renameArgs: Mismatches:
[([human],[c1])]
[[arity(animal)],[arity(animal)],[arity(getMonkeyPox)],[animal],[animal],[getMonkeyPox]]

--renameArgs: RepPlanS:
rename([([c1],[human],[+[getMonkeyPox,[c1]]])])

--renameArgs: TargCls:
[[+[getMonkeyPox,[c1]]]]

--Unblocking 1: RepPlanS:
[rename([([c1],[human],[+[getMonkeyPox,[c1]]])])]
[+[getMonkeyPox,[c1]]]


--extC2V: RepPlanS:
extC2V([([c1],vble(z),[+[getMonkeyPox,[c1]]])])

--extC2V: TargCls:
[[+[getMonkeyPox,[c1]]]]

--Unblocking 1: RepPlanS:
[extC2V([([c1],vble(z),[+[getMonkeyPox,[c1]]])])]
[+[getMonkeyPox,[c1]]]


--------Reformation Candidates------
[([+[getMonkeyPox,[c3]]],[+[getMonkeyPox,[c3]]],[([human],[c3])],1,[[([human],[c3])]],[([+[getMonkeyPox,[c3]]],[],[],[+[getMonkeyPox,[c3]]],[0,0])])]
---------------Axiom is 1  [+[getMonkeyPox,[c3]]]
---------------Mismatches is 1  [([human],[c3])]
--renameArgs: Mismatches:
[([human],[c3])]
[[arity(animal)],[arity(animal)],[arity(getMonkeyPox)],[animal],[animal],[getMonkeyPox]]

--renameArgs: RepPlanS:
rename([([c3],[human],[+[getMonkeyPox,[c3]]])])

--renameArgs: TargCls:
[[+[getMonkeyPox,[c3]]]]

--Unblocking 1: RepPlanS:
[rename([([c3],[human],[+[getMonkeyPox,[c3]]])])]
[+[getMonkeyPox,[c3]]]


--extC2V: RepPlanS:
extC2V([([c3],vble(z),[+[getMonkeyPox,[c3]]])])

--extC2V: TargCls:
[[+[getMonkeyPox,[c3]]]]

--Unblocking 1: RepPlanS:
[extC2V([([c3],vble(z),[+[getMonkeyPox,[c3]]])])]
[+[getMonkeyPox,[c3]]]


--Unblocking 1: RepPlanS:
[expand([+[getMonkeyPox,[human]]])]
[+[getMonkeyPox,[human]]]


--------Start unblocking 2 by adding a rule ------

--------Start unblocking 2 by adding a rule ------

--------Start unblocking 3: by Analogical Abduction for ------
[-[getMonkeyPox,[human]]]

******** No rules are useful, Analogy fails.

-- The single unresolvable subgoal. is :
[[-[getMonkeyPox,[human]]]]

5repair plans  for buildP:[[-[getMonkeyPox,[human]]],[[([-[getMonkeyPox,[human]]],[],[],[-[getMonkeyPox,[human]]],[0,0])]]]


[insuff,([expand([+[getMonkeyPox,[human]]])],[[+[getMonkeyPox,[human]]]]),[[+[getMonkeyPox,[human]]]]]
[insuff,([extC2V([([c1],vble(z),[+[getMonkeyPox,[c1]]])])],[[+[getMonkeyPox,[c1]]]]),[[+[getMonkeyPox,[c1]]]]]
[insuff,([extC2V([([c3],vble(z),[+[getMonkeyPox,[c3]]])])],[[+[getMonkeyPox,[c3]]]]),[[+[getMonkeyPox,[c3]]]]]
[insuff,([rename([([c1],[human],[+[getMonkeyPox,[c1]]])])],[[+[getMonkeyPox,[c1]]]]),[[+[getMonkeyPox,[c1]]]]]
[insuff,([rename([([c3],[human],[+[getMonkeyPox,[c3]]])])],[[+[getMonkeyPox,[c3]]]]),[[+[getMonkeyPox,[c3]]]]]


1 fault's new repair plans found: [[[insuff,([expand([+[getMonkeyPox,[human]]])],[[+[getMonkeyPox,[human]]]]),[[+[getMonkeyPox,[human]]]]],[insuff,([extC2V([([c1],vble(z),[+[getMonkeyPox,[c1]]])])],[[+[getMonkeyPox,[c1]]]]),[[+[getMonkeyPox,[c1]]]]],[insuff,([extC2V([([c3],vble(z),[+[getMonkeyPox,[c3]]])])],[[+[getMonkeyPox,[c3]]]]),[[+[getMonkeyPox,[c3]]]]],[insuff,([rename([([c1],[human],[+[getMonkeyPox,[c1]]])])],[[+[getMonkeyPox,[c1]]]]),[[+[getMonkeyPox,[c1]]]]],[insuff,([rename([([c3],[human],[+[getMonkeyPox,[c3]]])])],[[+[getMonkeyPox,[c3]]]]),[[+[getMonkeyPox,[c3]]]]]]]


[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]]

-------- Start to apply repair plans:
expand([+[getMonkeyPox,[human]]])


******** RepPlan: expand([+[getMonkeyPox,[human]]])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
extC2V([([c1],vble(z),[+[getMonkeyPox,[c1]]])])


******** RepPlan: extC2V([([c1],vble(z),[+[getMonkeyPox,[c1]]])])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
extC2V([([c3],vble(z),[+[getMonkeyPox,[c3]]])])


******** RepPlan: extC2V([([c3],vble(z),[+[getMonkeyPox,[c3]]])])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
rename([([c1],[human],[+[getMonkeyPox,[c1]]])])


******** RepPlan: rename([([c1],[human],[+[getMonkeyPox,[c1]]])])

-------- Finish applying repair plans.

-------- Start to apply repair plans:
rename([([c3],[human],[+[getMonkeyPox,[c3]]])])


******** RepPlan: rename([([c3],[human],[+[getMonkeyPox,[c3]]])])

-------- Finish applying repair plans.

-- There are 5 repaired states: 
[[[rename([([c2],[monkey],[+[animal,[c2]]])]),expand([+[getMonkeyPox,[human]]])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[getMonkeyPox,[human]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]]
[[[rename([([c2],[monkey],[+[animal,[c2]]])]),extC2V([([c1],vble(z),[+[getMonkeyPox,[c1]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,vble(z)]],[+[getMonkeyPox,[c3]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]]
[[[rename([([c2],[monkey],[+[animal,[c2]]])]),extC2V([([c3],vble(z),[+[getMonkeyPox,[c3]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,vble(z)]],[+[getMonkeyPox,[c1]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]]
[[[rename([([c2],[monkey],[+[animal,[c2]]])]),rename([([c1],[human],[+[getMonkeyPox,[c1]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,[c3]]],[+[getMonkeyPox,[human]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]]
[[[rename([([c2],[monkey],[+[animal,[c2]]])]),rename([([c3],[human],[+[getMonkeyPox,[c3]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[human]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]]


-- RepStatesFine [[[[rename([([c2],[monkey],[+[animal,[c2]]])]),rename([([c3],[human],[+[getMonkeyPox,[c3]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[human]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]],[[[rename([([c2],[monkey],[+[animal,[c2]]])]),rename([([c1],[human],[+[getMonkeyPox,[c1]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,[c3]]],[+[getMonkeyPox,[human]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]],[[[rename([([c2],[monkey],[+[animal,[c2]]])]),extC2V([([c3],vble(z),[+[getMonkeyPox,[c3]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,vble(z)]],[+[getMonkeyPox,[c1]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]],[[[rename([([c2],[monkey],[+[animal,[c2]]])]),extC2V([([c1],vble(z),[+[getMonkeyPox,[c1]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,vble(z)]],[+[getMonkeyPox,[c3]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]],[[[rename([([c2],[monkey],[+[animal,[c2]]])]),expand([+[getMonkeyPox,[human]]])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[getMonkeyPox,[human]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]]]

---------Start detInsInc, Input theory is:------

[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[human]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]]
[+[animal,vble(y)],-[mammal,vble(y)]]
[+[animal,[monkey]]]
[+[getMonkeyPox,[c1]]]
[+[getMonkeyPox,[human]]]
[+[mammal,vble(x)],-[human,vble(x)]]
[+[occurMonkeyPox,[c1]]]
[+[occurMonkeyPox,[c2]]]
[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]]
[+[tired,[c3]]]


---------Equivalent classes are:------

---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,[c3]]],[+[getMonkeyPox,[human]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]]
[+[animal,vble(y)],-[mammal,vble(y)]]
[+[animal,[monkey]]]
[+[getMonkeyPox,[c3]]]
[+[getMonkeyPox,[human]]]
[+[mammal,vble(x)],-[human,vble(x)]]
[+[occurMonkeyPox,[c1]]]
[+[occurMonkeyPox,[c2]]]
[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]]
[+[tired,[c3]]]


---------Equivalent classes are:------

---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,vble(z)]],[+[getMonkeyPox,[c1]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]]
[+[animal,vble(y)],-[mammal,vble(y)]]
[+[animal,[monkey]]]
[+[getMonkeyPox,vble(z)]]
[+[getMonkeyPox,[c1]]]
[+[mammal,vble(x)],-[human,vble(x)]]
[+[occurMonkeyPox,[c1]]]
[+[occurMonkeyPox,[c2]]]
[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]]
[+[tired,[c3]]]


---------Equivalent classes are:------

---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,vble(z)]],[+[getMonkeyPox,[c3]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]]
[+[animal,vble(y)],-[mammal,vble(y)]]
[+[animal,[monkey]]]
[+[getMonkeyPox,vble(z)]]
[+[getMonkeyPox,[c3]]]
[+[mammal,vble(x)],-[human,vble(x)]]
[+[occurMonkeyPox,[c1]]]
[+[occurMonkeyPox,[c2]]]
[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]]
[+[tired,[c3]]]


---------Equivalent classes are:------

---------InComps are------

---------Violations are------

---------Start detInsInc, Input theory is:------

[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[getMonkeyPox,[human]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]]
[+[animal,vble(y)],-[mammal,vble(y)]]
[+[animal,[monkey]]]
[+[getMonkeyPox,[c1]]]
[+[getMonkeyPox,[c3]]]
[+[getMonkeyPox,[human]]]
[+[mammal,vble(x)],-[human,vble(x)]]
[+[occurMonkeyPox,[c1]]]
[+[occurMonkeyPox,[c2]]]
[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]]
[+[tired,[c3]]]


---------Equivalent classes are:------

---------InComps are------

---------Violations are------

-- All faulty states: 5
0,0,[[[rename([([c2],[monkey],[+[animal,[c2]]])]),rename([([c3],[human],[+[getMonkeyPox,[c3]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[human]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]],[([-[getMonkeyPox,[human]]],[[([-[getMonkeyPox,[human]]],[+[getMonkeyPox,[human]]],[],[],[0,0])]]),([-[animal,[monkey]]],[[([-[animal,[monkey]]],[+[animal,[monkey]]],[],[],[0,0])]])],[],[]
0,0,[[[rename([([c2],[monkey],[+[animal,[c2]]])]),rename([([c1],[human],[+[getMonkeyPox,[c1]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,[c3]]],[+[getMonkeyPox,[human]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]],[([-[getMonkeyPox,[human]]],[[([-[getMonkeyPox,[human]]],[+[getMonkeyPox,[human]]],[],[],[0,0])]]),([-[animal,[monkey]]],[[([-[animal,[monkey]]],[+[animal,[monkey]]],[],[],[0,0])]])],[],[]
0,0,[[[rename([([c2],[monkey],[+[animal,[c2]]])]),extC2V([([c3],vble(z),[+[getMonkeyPox,[c3]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,vble(z)]],[+[getMonkeyPox,[c1]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]],[([-[getMonkeyPox,[human]]],[[([-[getMonkeyPox,[human]]],[+[getMonkeyPox,vble(z)]],[],[],[0,0])]]),([-[animal,[monkey]]],[[([-[animal,[monkey]]],[+[animal,[monkey]]],[],[],[0,0])]])],[],[]
0,0,[[[rename([([c2],[monkey],[+[animal,[c2]]])]),extC2V([([c1],vble(z),[+[getMonkeyPox,[c1]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,vble(z)]],[+[getMonkeyPox,[c3]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]],[([-[getMonkeyPox,[human]]],[[([-[getMonkeyPox,[human]]],[+[getMonkeyPox,vble(z)]],[],[],[0,0])]]),([-[animal,[monkey]]],[[([-[animal,[monkey]]],[+[animal,[monkey]]],[],[],[0,0])]])],[],[]
0,0,[[[rename([([c2],[monkey],[+[animal,[c2]]])]),expand([+[getMonkeyPox,[human]]])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[getMonkeyPox,[human]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]],[([-[getMonkeyPox,[human]]],[[([-[getMonkeyPox,[human]]],[+[getMonkeyPox,[human]]],[],[],[0,0])]]),([-[animal,[monkey]]],[[([-[animal,[monkey]]],[+[animal,[monkey]]],[],[],[0,0])]])],[],[]

An Optimal repaired theory with cost:2 and the fault state: [([-[getMonkeyPox,[human]]],[[([-[getMonkeyPox,[human]]],[+[getMonkeyPox,[human]]],[],[],[0,0])]]),([-[animal,[monkey]]],[[([-[animal,[monkey]]],[+[animal,[monkey]]],[],[],[0,0])]])],[],[]
[[[rename([([c2],[monkey],[+[animal,[c2]]])]),rename([([c3],[human],[+[getMonkeyPox,[c3]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[human]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]]
An Optimal repaired theory with cost:2 and the fault state: [([-[getMonkeyPox,[human]]],[[([-[getMonkeyPox,[human]]],[+[getMonkeyPox,[human]]],[],[],[0,0])]]),([-[animal,[monkey]]],[[([-[animal,[monkey]]],[+[animal,[monkey]]],[],[],[0,0])]])],[],[]
[[[rename([([c2],[monkey],[+[animal,[c2]]])]),rename([([c1],[human],[+[getMonkeyPox,[c1]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,[c3]]],[+[getMonkeyPox,[human]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]]
An Optimal repaired theory with cost:2 and the fault state: [([-[getMonkeyPox,[human]]],[[([-[getMonkeyPox,[human]]],[+[getMonkeyPox,vble(z)]],[],[],[0,0])]]),([-[animal,[monkey]]],[[([-[animal,[monkey]]],[+[animal,[monkey]]],[],[],[0,0])]])],[],[]
[[[rename([([c2],[monkey],[+[animal,[c2]]])]),extC2V([([c3],vble(z),[+[getMonkeyPox,[c3]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,vble(z)]],[+[getMonkeyPox,[c1]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]]
An Optimal repaired theory with cost:2 and the fault state: [([-[getMonkeyPox,[human]]],[[([-[getMonkeyPox,[human]]],[+[getMonkeyPox,vble(z)]],[],[],[0,0])]]),([-[animal,[monkey]]],[[([-[animal,[monkey]]],[+[animal,[monkey]]],[],[],[0,0])]])],[],[]
[[[rename([([c2],[monkey],[+[animal,[c2]]])]),extC2V([([c1],vble(z),[+[getMonkeyPox,[c1]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,vble(z)]],[+[getMonkeyPox,[c3]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]]
An Optimal repaired theory with cost:2 and the fault state: [([-[getMonkeyPox,[human]]],[[([-[getMonkeyPox,[human]]],[+[getMonkeyPox,[human]]],[],[],[0,0])]]),([-[animal,[monkey]]],[[([-[animal,[monkey]]],[+[animal,[monkey]]],[],[],[0,0])]])],[],[]
[[[rename([([c2],[monkey],[+[animal,[c2]]])]),expand([+[getMonkeyPox,[human]]])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[getMonkeyPox,[human]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]]
--The number of Optimals: 5
[[[rename([([c2],[monkey],[+[animal,[c2]]])]),rename([([c3],[human],[+[getMonkeyPox,[c3]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[human]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]],[([-[getMonkeyPox,[human]]],[[([-[getMonkeyPox,[human]]],[+[getMonkeyPox,[human]]],[],[],[0,0])]]),([-[animal,[monkey]]],[[([-[animal,[monkey]]],[+[animal,[monkey]]],[],[],[0,0])]])],[],[]
[[[rename([([c2],[monkey],[+[animal,[c2]]])]),rename([([c1],[human],[+[getMonkeyPox,[c1]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,[c3]]],[+[getMonkeyPox,[human]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]],[([-[getMonkeyPox,[human]]],[[([-[getMonkeyPox,[human]]],[+[getMonkeyPox,[human]]],[],[],[0,0])]]),([-[animal,[monkey]]],[[([-[animal,[monkey]]],[+[animal,[monkey]]],[],[],[0,0])]])],[],[]
[[[rename([([c2],[monkey],[+[animal,[c2]]])]),extC2V([([c3],vble(z),[+[getMonkeyPox,[c3]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,vble(z)]],[+[getMonkeyPox,[c1]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]],[([-[getMonkeyPox,[human]]],[[([-[getMonkeyPox,[human]]],[+[getMonkeyPox,vble(z)]],[],[],[0,0])]]),([-[animal,[monkey]]],[[([-[animal,[monkey]]],[+[animal,[monkey]]],[],[],[0,0])]])],[],[]
[[[rename([([c2],[monkey],[+[animal,[c2]]])]),extC2V([([c1],vble(z),[+[getMonkeyPox,[c1]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,vble(z)]],[+[getMonkeyPox,[c3]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]],[([-[getMonkeyPox,[human]]],[[([-[getMonkeyPox,[human]]],[+[getMonkeyPox,vble(z)]],[],[],[0,0])]]),([-[animal,[monkey]]],[[([-[animal,[monkey]]],[+[animal,[monkey]]],[],[],[0,0])]])],[],[]
[[[rename([([c2],[monkey],[+[animal,[c2]]])]),expand([+[getMonkeyPox,[human]]])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[getMonkeyPox,[human]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]],[([-[getMonkeyPox,[human]]],[[([-[getMonkeyPox,[human]]],[+[getMonkeyPox,[human]]],[],[],[0,0])]]),([-[animal,[monkey]]],[[([-[animal,[monkey]]],[+[animal,[monkey]]],[],[],[0,0])]])],[],[]

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

******** A solution is reached. *******

--------------AllRepStates: [fault-free,2/2,[[[rename([([c2],[monkey],[+[animal,[c2]]])]),rename([([c3],[human],[+[getMonkeyPox,[c3]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[human]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]]]
[fault-free,2/2,[[[rename([([c2],[monkey],[+[animal,[c2]]])]),rename([([c1],[human],[+[getMonkeyPox,[c1]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,[c3]]],[+[getMonkeyPox,[human]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]]]
[fault-free,2/2,[[[rename([([c2],[monkey],[+[animal,[c2]]])]),extC2V([([c3],vble(z),[+[getMonkeyPox,[c3]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,vble(z)]],[+[getMonkeyPox,[c1]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]]]
[fault-free,2/2,[[[rename([([c2],[monkey],[+[animal,[c2]]])]),extC2V([([c1],vble(z),[+[getMonkeyPox,[c1]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,vble(z)]],[+[getMonkeyPox,[c3]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]]]
[fault-free,2/2,[[[rename([([c2],[monkey],[+[animal,[c2]]])]),expand([+[getMonkeyPox,[human]]])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[getMonkeyPox,[human]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]]]


--------------executation time 2---
time takes
75

------------- AllRepStates -------------
[fault-free,2/2,[[[rename([([c2],[monkey],[+[animal,[c2]]])]),rename([([c3],[human],[+[getMonkeyPox,[c3]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[human]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]]]
[fault-free,2/2,[[[rename([([c2],[monkey],[+[animal,[c2]]])]),rename([([c1],[human],[+[getMonkeyPox,[c1]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,[c3]]],[+[getMonkeyPox,[human]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]]]
[fault-free,2/2,[[[rename([([c2],[monkey],[+[animal,[c2]]])]),extC2V([([c3],vble(z),[+[getMonkeyPox,[c3]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,vble(z)]],[+[getMonkeyPox,[c1]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]]]
[fault-free,2/2,[[[rename([([c2],[monkey],[+[animal,[c2]]])]),extC2V([([c1],vble(z),[+[getMonkeyPox,[c1]]])])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,vble(z)]],[+[getMonkeyPox,[c3]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]]]
[fault-free,2/2,[[[rename([([c2],[monkey],[+[animal,[c2]]])]),expand([+[getMonkeyPox,[human]]])],[]],[[[c1]],[[c2]],[[c3]],[[human]],[[monkey]]],[],[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[getMonkeyPox,[human]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]],[[+[getMonkeyPox,[human]]],[+[animal,[monkey]]]],[[+[animal,[c2]]]]]]




------------- TASS -------------
FullyNumRaw is: 5
FullyNum is: 5


[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,vble(z)]],[+[getMonkeyPox,[c1]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]]
[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,vble(z)]],[+[getMonkeyPox,[c3]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]]
[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[c3]]],[+[getMonkeyPox,[human]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]]
[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,[c1]]],[+[getMonkeyPox,[human]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]]
[[+[animal,vble(y)],-[mammal,vble(y)]],[+[animal,[monkey]]],[+[getMonkeyPox,[c3]]],[+[getMonkeyPox,[human]]],[+[mammal,vble(x)],-[human,vble(x)]],[+[occurMonkeyPox,[c1]]],[+[occurMonkeyPox,[c2]]],[+[tired,vble(z)],-[flu,vble(z)],-[human,vble(z)]],[+[tired,[c3]]]]



------------- TBSS -------------
SemiNumRaw is: 0
SemiNum is: 0





